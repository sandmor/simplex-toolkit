name: Dependency Management

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch:

env:
  NODE_VERSION: "18"
  PNPM_VERSION: "8"

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Update dependencies
        run: |
          pnpm update --latest

      - name: Run tests after update
        run: |
          pnpm run build
          echo "‚úÖ Build successful after dependency updates"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies"
          title: "chore: automated dependency updates"
          body: |
            ## üîÑ Automated Dependency Updates

            This PR contains automated dependency updates:

            ### Changes
            - Updated all dependencies to their latest compatible versions
            - Verified build still passes

            ### Verification
            - [x] Build passes
            - [x] TypeScript compilation successful

            **Note:** Please review the changes and run additional tests before merging.
          branch: chore/dependency-updates
          delete-branch: true

  security-check:
    name: Security Vulnerability Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: |
          echo "üîç Running security audit..."
          pnpm audit --audit-level high

      - name: Check for known vulnerabilities
        run: |
          echo "üõ°Ô∏è Checking for vulnerabilities..."
          # This will fail if high or critical vulnerabilities are found
          pnpm audit --audit-level high --prod
